name: Terraform Apply


# This workflow is triggered once a PR is merged 
on:
  workflow_dispatch:
    branches:
      -

# Define Terraform Version and directory where it will run
env: 
    TERRAFORM_VERSION: "1.2.9"
    TF_DIRECTORY: "org/nprd"

jobs:
  terraform_apply:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: nprd
        
    steps:
      - name: Checkout code      
        uses: actions/checkout@v3
      
      - name: Get Directory Name 
        id: dir-id
        shell: bash
        env:
          DIRECTORY: ${{ env.TF_DIRECTORY}}
        run: | 
          DIR_NAME=$(echo $DIRECTORY | awk 'BEGIN {FS= "/" } ; { print $2 }')
          echo "DIR_NAME=$DIR_NAME" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          service_account: ${{ vars.TERRAFORM_SA }}
          credentials_json: ${{ secrets.GOOGLE_ACCESS_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0.6.0'

      - name: Terraform Init
        id: init
        working-directory: ${{ env.TF_DIRECTORY}}
        shell: bash
        run: |
          terraform init
      

      - name: Download Plan
        id: download-plan
        uses: dawidd6/action-download-artifact@v2
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            workflow: tf_plan.yml
            name: ${{ steps.dir-id.outputs.DIR_NAME }}-tf-plan
            path: ${{ env.TF_DIRECTORY}}


      - name: Terraform Apply
        id: apply
        working-directory: ${{ env.TF_DIRECTORY}}
        shell: bash
        run: |
            terraform apply -input=false -no-color tfplan 
  
  wrong_branch:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: nprd
        
    steps:
      - name: Wrong branch warning     
        shell: bash
        run: |
          echo "This pipeline is not able to run on main branch."
          echo "To deploy to main branch, please create a PR."


    
